openapi: 3.0.3
info:
  title: EBS Network API
  version: 0.1.0
servers:
  - url: /v1
    description: Base path
paths:
  /networks/protocols:
    get:
      tags:
        - Protocol
      operationId: getProtocols
      summary: Returns a list of blockchain network protocols.
      description: Returns a list of blockchain network protocols the user can read.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON object containing a enum of protocols
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    dlt:
                      type: string
                      example: Corda Enterprise
                    vendor:
                      type: string
                      example: R3
                    version:
                      type: string
                      example: '4.9'
                    openSource:
                      type: boolean
                      example: 'true'
                    tag:
                      type: string
                      example: CORDA49E
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks:
    post:
      tags:
        - Network
      operationId: postNetwork
      deprecated: true
      summary: Creates a network
      description: >-
        Creates a network. In case of a Corda network, it'll be created with
        CENM, a notary and an initial node.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - allOf:
                    - type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          readOnly: true
                        status:
                          type: string
                          enum:
                            - STARTING
                            - RUNNING
                            - CREATING
                            - STOPPING
                            - STOPPED
                            - PENDING_UPDATE
                            - DELETING
                            - ERROR
                            - PURGING
                            - RESTARTING
                          readOnly: true
                        alias:
                          type: string
                          example: My Blockchain Network
                          description: >-
                            An alias for the network being created. Used to be
                            easily recognized by the user.
                        name:
                          type: string
                          example: my-blockchain-network
                          pattern: ^([a-z0-9]+)(\-[a-z0-9]+)*
                          description: >-
                            The name of the network as it will be built in the
                            cloud. It must: be lowercase; not contain special
                            characters; not be longer than X characters. TODO:
                            define the max length properly
                          readOnly: true
                        domain:
                          type: string
                          example: block.gov
                          minLength: 4
                          maxLength: 254
                          description: >-
                            The domain the network will use. It must be
                            compliant with RFCs 1034 and 1035.TODO: generalize
                            this description.
                        internalDomain:
                          type: string
                          readOnly: true
                        isPublic:
                          type: boolean
                          example: 'false'
                        nodeNames:
                          type: array
                          description: List of node names used in network creation.
                          items:
                            type: string
                            description: Node named used in network creation.
                            example: CentralBank
                        payer:
                          type: string
                          format: uuid
                          readOnly: true
                        protocol:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                            name:
                              type: string
                              readOnly: true
                            tag:
                              type: string
                              readOnly: true
                          required:
                            - id
                        customer:
                          type: integer
                          format: int64
                        tenant:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                              readOnly: true
                            location:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: Azure - Brazil South
                                  description: The region where the cluster is deployed.
                                coordinates:
                                  type: object
                                  properties:
                                    longitude:
                                      type: string
                                      example: -23.54779
                                    latitude:
                                      type: string
                                      example: -46.627919
                                  required:
                                    - longitude
                                    - latitude
                              required:
                                - name
                                - coordinates
                            tier:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: Starter
                                  description: User friendly name for cluster sizing.
                                description:
                                  type: string
                                  description: Info about the tenant
                                public:
                                  type: boolean
                                  example: true
                                  description: Defines if it is a public tenant or not
                                sizing:
                                  type: object
                                  properties:
                                    vcpu:
                                      type: number
                                      format: double
                                      example: '0.5'
                                      description: Number of virtual cpus.
                                      readOnly: true
                                    ram:
                                      type: integer
                                      format: int64
                                      example: '8000'
                                      description: Size of RAM.
                                      readOnly: true
                                  required:
                                    - vcpu
                                    - ram
                        creationDate:
                          type: string
                          format: date-time
                          readOnly: true
                        participants:
                          type: integer
                          format: int64
                          readOnly: true
                        nodes:
                          type: integer
                          format: int64
                          readOnly: true
                      required:
                        - alias
                        - domain
                        - protocol
                        - tenant
                        - customer
                    - type: object
                      description: >
                        We are using only the organization, city and country
                        fields of a X500 legal name.


                        For details, see:

                         - [X500 Legal Name Restrictions](https://corda.network/corda-network-rulebook/allowable-identity-names-on-corda-network/)

                         - [A String Representation of Distinguished Names](https://datatracker.ietf.org/doc/html/rfc1485)
                      properties:
                        organization:
                          type: string
                          pattern: ^[A-Z][A-Za-z0-9]*(\s[A-Za-z0-9]+)*$
                          minLength: 2
                          maxLength: 110
                        city:
                          type: string
                          pattern: ^[A-Z][A-Za-z]*(\s[A-Za-z]+)*$
                          minLength: 2
                          maxLength: 64
                        country:
                          type: string
                          pattern: ^[A-Z][A-Z]$
                          minLength: 2
                          maxLength: 2
                      required:
                        - organization
                        - city
                        - country
                    - type: object
                      properties:
                        nodeDomain:
                          type: string
                          example: block.gov
                          minLength: 4
                          maxLength: 254
                          description: >-
                            The domain the network will use. It must be
                            compliant with RFCs 1034 and 1035.TODO: generalize
                            this description.
                        platformVersion:
                          type: integer
                          readOnly: true
                        sandboxConfiguration:
                          type: object
                          required:
                            - network
                            - mainUrl
                            - available
                          properties:
                            id:
                              type: integer
                              format: int64
                              readOnly: true
                            network:
                              type: integer
                              format: int64
                            mainUrl:
                              type: string
                              format: url
                            available:
                              type: boolean
                      required:
                        - nodeDomain
      responses:
        '201':
          description: Network created.
          headers:
            Location:
              description: the location to get the newly created entry
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            readOnly: true
                          status:
                            type: string
                            enum:
                              - STARTING
                              - RUNNING
                              - CREATING
                              - STOPPING
                              - STOPPED
                              - PENDING_UPDATE
                              - DELETING
                              - ERROR
                              - PURGING
                              - RESTARTING
                            readOnly: true
                          alias:
                            type: string
                            example: My Blockchain Network
                            description: >-
                              An alias for the network being created. Used to be
                              easily recognized by the user.
                          name:
                            type: string
                            example: my-blockchain-network
                            pattern: ^([a-z0-9]+)(\-[a-z0-9]+)*
                            description: >-
                              The name of the network as it will be built in the
                              cloud. It must: be lowercase; not contain special
                              characters; not be longer than X characters. TODO:
                              define the max length properly
                            readOnly: true
                          domain:
                            type: string
                            example: block.gov
                            minLength: 4
                            maxLength: 254
                            description: >-
                              The domain the network will use. It must be
                              compliant with RFCs 1034 and 1035.TODO: generalize
                              this description.
                          internalDomain:
                            type: string
                            readOnly: true
                          isPublic:
                            type: boolean
                            example: 'false'
                          nodeNames:
                            type: array
                            description: List of node names used in network creation.
                            items:
                              type: string
                              description: Node named used in network creation.
                              example: CentralBank
                          payer:
                            type: string
                            format: uuid
                            readOnly: true
                          protocol:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                              name:
                                type: string
                                readOnly: true
                              tag:
                                type: string
                                readOnly: true
                            required:
                              - id
                          customer:
                            type: integer
                            format: int64
                          tenant:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                readOnly: true
                              location:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Azure - Brazil South
                                    description: The region where the cluster is deployed.
                                  coordinates:
                                    type: object
                                    properties:
                                      longitude:
                                        type: string
                                        example: -23.54779
                                      latitude:
                                        type: string
                                        example: -46.627919
                                    required:
                                      - longitude
                                      - latitude
                                required:
                                  - name
                                  - coordinates
                              tier:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Starter
                                    description: User friendly name for cluster sizing.
                                  description:
                                    type: string
                                    description: Info about the tenant
                                  public:
                                    type: boolean
                                    example: true
                                    description: Defines if it is a public tenant or not
                                  sizing:
                                    type: object
                                    properties:
                                      vcpu:
                                        type: number
                                        format: double
                                        example: '0.5'
                                        description: Number of virtual cpus.
                                        readOnly: true
                                      ram:
                                        type: integer
                                        format: int64
                                        example: '8000'
                                        description: Size of RAM.
                                        readOnly: true
                                    required:
                                      - vcpu
                                      - ram
                          creationDate:
                            type: string
                            format: date-time
                            readOnly: true
                          participants:
                            type: integer
                            format: int64
                            readOnly: true
                          nodes:
                            type: integer
                            format: int64
                            readOnly: true
                        required:
                          - alias
                          - domain
                          - protocol
                          - tenant
                          - customer
                      - type: object
                        description: >
                          We are using only the organization, city and country
                          fields of a X500 legal name.


                          For details, see:

                           - [X500 Legal Name Restrictions](https://corda.network/corda-network-rulebook/allowable-identity-names-on-corda-network/)

                           - [A String Representation of Distinguished Names](https://datatracker.ietf.org/doc/html/rfc1485)
                        properties:
                          organization:
                            type: string
                            pattern: ^[A-Z][A-Za-z0-9]*(\s[A-Za-z0-9]+)*$
                            minLength: 2
                            maxLength: 110
                          city:
                            type: string
                            pattern: ^[A-Z][A-Za-z]*(\s[A-Za-z]+)*$
                            minLength: 2
                            maxLength: 64
                          country:
                            type: string
                            pattern: ^[A-Z][A-Z]$
                            minLength: 2
                            maxLength: 2
                        required:
                          - organization
                          - city
                          - country
                      - type: object
                        properties:
                          nodeDomain:
                            type: string
                            example: block.gov
                            minLength: 4
                            maxLength: 254
                            description: >-
                              The domain the network will use. It must be
                              compliant with RFCs 1034 and 1035.TODO: generalize
                              this description.
                          platformVersion:
                            type: integer
                            readOnly: true
                          sandboxConfiguration:
                            type: object
                            required:
                              - network
                              - mainUrl
                              - available
                            properties:
                              id:
                                type: integer
                                format: int64
                                readOnly: true
                              network:
                                type: integer
                                format: int64
                              mainUrl:
                                type: string
                                format: url
                              available:
                                type: boolean
                        required:
                          - nodeDomain
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
    get:
      tags:
        - Network
      operationId: getNetworks
      summary: Returns a list of networks
      description: Returns a list of networks the user can read and/or write.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: alias
          schema:
            type: string
            description: Filters network by alias.
          required: false
        - in: query
          name: name
          schema:
            type: string
            description: Filters networks by name.
          required: false
        - in: query
          name: protocol
          schema:
            type: array
            items:
              type: string
            description: Filters network by protocol.
          required: false
        - in: query
          name: tenantLocation
          schema:
            type: string
            description: Filters network by location.
          required: false
        - in: query
          name: isPublic
          schema:
            type: boolean
            description: Filters network by public or private networks.
          required: false
        - in: query
          name: tenantTier
          schema:
            type: string
            description: Filters network by tier.
          required: false
        - in: query
          name: page
          schema:
            type: integer
            description: Current page. Defaults to 0.
            default: 0
          required: false
        - in: query
          name: pageSize
          schema:
            type: integer
            description: Max entries for each page. Defaults to 10.
            default: 10
          required: false
      responses:
        '200':
          description: A JSON object containing a list of networks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - allOf:
                            - type: object
                              properties:
                                id:
                                  type: integer
                                  format: int64
                                  readOnly: true
                                status:
                                  type: string
                                  enum:
                                    - STARTING
                                    - RUNNING
                                    - CREATING
                                    - STOPPING
                                    - STOPPED
                                    - PENDING_UPDATE
                                    - DELETING
                                    - ERROR
                                    - PURGING
                                    - RESTARTING
                                  readOnly: true
                                alias:
                                  type: string
                                  example: My Blockchain Network
                                  description: >-
                                    An alias for the network being created. Used
                                    to be easily recognized by the user.
                                name:
                                  type: string
                                  example: my-blockchain-network
                                  pattern: ^([a-z0-9]+)(\-[a-z0-9]+)*
                                  description: >-
                                    The name of the network as it will be built
                                    in the cloud. It must: be lowercase; not
                                    contain special characters; not be longer
                                    than X characters. TODO: define the max
                                    length properly
                                  readOnly: true
                                domain:
                                  type: string
                                  example: block.gov
                                  minLength: 4
                                  maxLength: 254
                                  description: >-
                                    The domain the network will use. It must be
                                    compliant with RFCs 1034 and 1035.TODO:
                                    generalize this description.
                                internalDomain:
                                  type: string
                                  readOnly: true
                                isPublic:
                                  type: boolean
                                  example: 'false'
                                nodeNames:
                                  type: array
                                  description: List of node names used in network creation.
                                  items:
                                    type: string
                                    description: Node named used in network creation.
                                    example: CentralBank
                                payer:
                                  type: string
                                  format: uuid
                                  readOnly: true
                                protocol:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      format: int64
                                    name:
                                      type: string
                                      readOnly: true
                                    tag:
                                      type: string
                                      readOnly: true
                                  required:
                                    - id
                                customer:
                                  type: integer
                                  format: int64
                                tenant:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      format: int64
                                      readOnly: true
                                    location:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          example: Azure - Brazil South
                                          description: >-
                                            The region where the cluster is
                                            deployed.
                                        coordinates:
                                          type: object
                                          properties:
                                            longitude:
                                              type: string
                                              example: -23.54779
                                            latitude:
                                              type: string
                                              example: -46.627919
                                          required:
                                            - longitude
                                            - latitude
                                      required:
                                        - name
                                        - coordinates
                                    tier:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          example: Starter
                                          description: User friendly name for cluster sizing.
                                        description:
                                          type: string
                                          description: Info about the tenant
                                        public:
                                          type: boolean
                                          example: true
                                          description: Defines if it is a public tenant or not
                                        sizing:
                                          type: object
                                          properties:
                                            vcpu:
                                              type: number
                                              format: double
                                              example: '0.5'
                                              description: Number of virtual cpus.
                                              readOnly: true
                                            ram:
                                              type: integer
                                              format: int64
                                              example: '8000'
                                              description: Size of RAM.
                                              readOnly: true
                                          required:
                                            - vcpu
                                            - ram
                                creationDate:
                                  type: string
                                  format: date-time
                                  readOnly: true
                                participants:
                                  type: integer
                                  format: int64
                                  readOnly: true
                                nodes:
                                  type: integer
                                  format: int64
                                  readOnly: true
                              required:
                                - alias
                                - domain
                                - protocol
                                - tenant
                                - customer
                            - type: object
                              description: >
                                We are using only the organization, city and
                                country fields of a X500 legal name.


                                For details, see:

                                 - [X500 Legal Name Restrictions](https://corda.network/corda-network-rulebook/allowable-identity-names-on-corda-network/)

                                 - [A String Representation of Distinguished Names](https://datatracker.ietf.org/doc/html/rfc1485)
                              properties:
                                organization:
                                  type: string
                                  pattern: ^[A-Z][A-Za-z0-9]*(\s[A-Za-z0-9]+)*$
                                  minLength: 2
                                  maxLength: 110
                                city:
                                  type: string
                                  pattern: ^[A-Z][A-Za-z]*(\s[A-Za-z]+)*$
                                  minLength: 2
                                  maxLength: 64
                                country:
                                  type: string
                                  pattern: ^[A-Z][A-Z]$
                                  minLength: 2
                                  maxLength: 2
                              required:
                                - organization
                                - city
                                - country
                            - type: object
                              properties:
                                nodeDomain:
                                  type: string
                                  example: block.gov
                                  minLength: 4
                                  maxLength: 254
                                  description: >-
                                    The domain the network will use. It must be
                                    compliant with RFCs 1034 and 1035.TODO:
                                    generalize this description.
                                platformVersion:
                                  type: integer
                                  readOnly: true
                                sandboxConfiguration:
                                  type: object
                                  required:
                                    - network
                                    - mainUrl
                                    - available
                                  properties:
                                    id:
                                      type: integer
                                      format: int64
                                      readOnly: true
                                    network:
                                      type: integer
                                      format: int64
                                    mainUrl:
                                      type: string
                                      format: url
                                    available:
                                      type: boolean
                              required:
                                - nodeDomain
                  metadata:
                    type: object
                    properties:
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks/{network-id}:
    put:
      tags:
        - Network
      operationId: putNetwork
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - allOf:
                    - type: object
                      properties:
                        alias:
                          type: string
                          example: My Blockchain Network
                          description: >-
                            An alias for the network being created. Used to be
                            easily recognized by the user.
                        domain:
                          type: string
                          example: block.gov
                          minLength: 4
                          maxLength: 254
                          description: >-
                            The domain the network will use. It must be
                            compliant with RFCs 1034 and 1035.TODO: generalize
                            this description.
                        tenant:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                              readOnly: true
                            location:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: Azure - Brazil South
                                  description: The region where the cluster is deployed.
                                coordinates:
                                  type: object
                                  properties:
                                    longitude:
                                      type: string
                                      example: -23.54779
                                    latitude:
                                      type: string
                                      example: -46.627919
                                  required:
                                    - longitude
                                    - latitude
                              required:
                                - name
                                - coordinates
                            tier:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: Starter
                                  description: User friendly name for cluster sizing.
                                description:
                                  type: string
                                  description: Info about the tenant
                                public:
                                  type: boolean
                                  example: true
                                  description: Defines if it is a public tenant or not
                                sizing:
                                  type: object
                                  properties:
                                    vcpu:
                                      type: number
                                      format: double
                                      example: '0.5'
                                      description: Number of virtual cpus.
                                      readOnly: true
                                    ram:
                                      type: integer
                                      format: int64
                                      example: '8000'
                                      description: Size of RAM.
                                      readOnly: true
                                  required:
                                    - vcpu
                                    - ram
                        protocol:
                          type: integer
                          format: int64
                        isPublic:
                          type: boolean
                          example: 'false'
                      required:
                        - alias
                    - type: object
                      properties:
                        nodeDomain:
                          type: string
                          example: block.gov
                          minLength: 4
                          maxLength: 254
                          description: >-
                            The domain the network will use. It must be
                            compliant with RFCs 1034 and 1035.TODO: generalize
                            this description.
                - type: object
                  properties:
                    command:
                      description: Updates service status.
                      type: string
                      enum:
                        - STOP
                        - START
                        - RESTART
                        - PURGE
      responses:
        '204':
          description: Successfull Request
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
    get:
      tags:
        - Network
      operationId: getNetwork
      summary: Returns a network
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successfull Request
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            readOnly: true
                          status:
                            type: string
                            enum:
                              - STARTING
                              - RUNNING
                              - CREATING
                              - STOPPING
                              - STOPPED
                              - PENDING_UPDATE
                              - DELETING
                              - ERROR
                              - PURGING
                              - RESTARTING
                            readOnly: true
                          alias:
                            type: string
                            example: My Blockchain Network
                            description: >-
                              An alias for the network being created. Used to be
                              easily recognized by the user.
                          name:
                            type: string
                            example: my-blockchain-network
                            pattern: ^([a-z0-9]+)(\-[a-z0-9]+)*
                            description: >-
                              The name of the network as it will be built in the
                              cloud. It must: be lowercase; not contain special
                              characters; not be longer than X characters. TODO:
                              define the max length properly
                            readOnly: true
                          domain:
                            type: string
                            example: block.gov
                            minLength: 4
                            maxLength: 254
                            description: >-
                              The domain the network will use. It must be
                              compliant with RFCs 1034 and 1035.TODO: generalize
                              this description.
                          internalDomain:
                            type: string
                            readOnly: true
                          isPublic:
                            type: boolean
                            example: 'false'
                          nodeNames:
                            type: array
                            description: List of node names used in network creation.
                            items:
                              type: string
                              description: Node named used in network creation.
                              example: CentralBank
                          payer:
                            type: string
                            format: uuid
                            readOnly: true
                          protocol:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                              name:
                                type: string
                                readOnly: true
                              tag:
                                type: string
                                readOnly: true
                            required:
                              - id
                          customer:
                            type: integer
                            format: int64
                          tenant:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                readOnly: true
                              location:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Azure - Brazil South
                                    description: The region where the cluster is deployed.
                                  coordinates:
                                    type: object
                                    properties:
                                      longitude:
                                        type: string
                                        example: -23.54779
                                      latitude:
                                        type: string
                                        example: -46.627919
                                    required:
                                      - longitude
                                      - latitude
                                required:
                                  - name
                                  - coordinates
                              tier:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Starter
                                    description: User friendly name for cluster sizing.
                                  description:
                                    type: string
                                    description: Info about the tenant
                                  public:
                                    type: boolean
                                    example: true
                                    description: Defines if it is a public tenant or not
                                  sizing:
                                    type: object
                                    properties:
                                      vcpu:
                                        type: number
                                        format: double
                                        example: '0.5'
                                        description: Number of virtual cpus.
                                        readOnly: true
                                      ram:
                                        type: integer
                                        format: int64
                                        example: '8000'
                                        description: Size of RAM.
                                        readOnly: true
                                    required:
                                      - vcpu
                                      - ram
                          creationDate:
                            type: string
                            format: date-time
                            readOnly: true
                          participants:
                            type: integer
                            format: int64
                            readOnly: true
                          nodes:
                            type: integer
                            format: int64
                            readOnly: true
                        required:
                          - alias
                          - domain
                          - protocol
                          - tenant
                          - customer
                      - type: object
                        description: >
                          We are using only the organization, city and country
                          fields of a X500 legal name.


                          For details, see:

                           - [X500 Legal Name Restrictions](https://corda.network/corda-network-rulebook/allowable-identity-names-on-corda-network/)

                           - [A String Representation of Distinguished Names](https://datatracker.ietf.org/doc/html/rfc1485)
                        properties:
                          organization:
                            type: string
                            pattern: ^[A-Z][A-Za-z0-9]*(\s[A-Za-z0-9]+)*$
                            minLength: 2
                            maxLength: 110
                          city:
                            type: string
                            pattern: ^[A-Z][A-Za-z]*(\s[A-Za-z]+)*$
                            minLength: 2
                            maxLength: 64
                          country:
                            type: string
                            pattern: ^[A-Z][A-Z]$
                            minLength: 2
                            maxLength: 2
                        required:
                          - organization
                          - city
                          - country
                      - type: object
                        properties:
                          nodeDomain:
                            type: string
                            example: block.gov
                            minLength: 4
                            maxLength: 254
                            description: >-
                              The domain the network will use. It must be
                              compliant with RFCs 1034 and 1035.TODO: generalize
                              this description.
                          platformVersion:
                            type: integer
                            readOnly: true
                          sandboxConfiguration:
                            type: object
                            required:
                              - network
                              - mainUrl
                              - available
                            properties:
                              id:
                                type: integer
                                format: int64
                                readOnly: true
                              network:
                                type: integer
                                format: int64
                              mainUrl:
                                type: string
                                format: url
                              available:
                                type: boolean
                        required:
                          - nodeDomain
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
    delete:
      tags:
        - Network
      operationId: deleteNetwork
      summary: Deletes a network
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successfull Request
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            readOnly: true
                          status:
                            type: string
                            enum:
                              - STARTING
                              - RUNNING
                              - CREATING
                              - STOPPING
                              - STOPPED
                              - PENDING_UPDATE
                              - DELETING
                              - ERROR
                              - PURGING
                              - RESTARTING
                            readOnly: true
                          alias:
                            type: string
                            example: My Blockchain Network
                            description: >-
                              An alias for the network being created. Used to be
                              easily recognized by the user.
                          name:
                            type: string
                            example: my-blockchain-network
                            pattern: ^([a-z0-9]+)(\-[a-z0-9]+)*
                            description: >-
                              The name of the network as it will be built in the
                              cloud. It must: be lowercase; not contain special
                              characters; not be longer than X characters. TODO:
                              define the max length properly
                            readOnly: true
                          domain:
                            type: string
                            example: block.gov
                            minLength: 4
                            maxLength: 254
                            description: >-
                              The domain the network will use. It must be
                              compliant with RFCs 1034 and 1035.TODO: generalize
                              this description.
                          internalDomain:
                            type: string
                            readOnly: true
                          isPublic:
                            type: boolean
                            example: 'false'
                          nodeNames:
                            type: array
                            description: List of node names used in network creation.
                            items:
                              type: string
                              description: Node named used in network creation.
                              example: CentralBank
                          payer:
                            type: string
                            format: uuid
                            readOnly: true
                          protocol:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                              name:
                                type: string
                                readOnly: true
                              tag:
                                type: string
                                readOnly: true
                            required:
                              - id
                          customer:
                            type: integer
                            format: int64
                          tenant:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                readOnly: true
                              location:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Azure - Brazil South
                                    description: The region where the cluster is deployed.
                                  coordinates:
                                    type: object
                                    properties:
                                      longitude:
                                        type: string
                                        example: -23.54779
                                      latitude:
                                        type: string
                                        example: -46.627919
                                    required:
                                      - longitude
                                      - latitude
                                required:
                                  - name
                                  - coordinates
                              tier:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Starter
                                    description: User friendly name for cluster sizing.
                                  description:
                                    type: string
                                    description: Info about the tenant
                                  public:
                                    type: boolean
                                    example: true
                                    description: Defines if it is a public tenant or not
                                  sizing:
                                    type: object
                                    properties:
                                      vcpu:
                                        type: number
                                        format: double
                                        example: '0.5'
                                        description: Number of virtual cpus.
                                        readOnly: true
                                      ram:
                                        type: integer
                                        format: int64
                                        example: '8000'
                                        description: Size of RAM.
                                        readOnly: true
                                    required:
                                      - vcpu
                                      - ram
                          creationDate:
                            type: string
                            format: date-time
                            readOnly: true
                          participants:
                            type: integer
                            format: int64
                            readOnly: true
                          nodes:
                            type: integer
                            format: int64
                            readOnly: true
                        required:
                          - alias
                          - domain
                          - protocol
                          - tenant
                          - customer
                      - type: object
                        description: >
                          We are using only the organization, city and country
                          fields of a X500 legal name.


                          For details, see:

                           - [X500 Legal Name Restrictions](https://corda.network/corda-network-rulebook/allowable-identity-names-on-corda-network/)

                           - [A String Representation of Distinguished Names](https://datatracker.ietf.org/doc/html/rfc1485)
                        properties:
                          organization:
                            type: string
                            pattern: ^[A-Z][A-Za-z0-9]*(\s[A-Za-z0-9]+)*$
                            minLength: 2
                            maxLength: 110
                          city:
                            type: string
                            pattern: ^[A-Z][A-Za-z]*(\s[A-Za-z]+)*$
                            minLength: 2
                            maxLength: 64
                          country:
                            type: string
                            pattern: ^[A-Z][A-Z]$
                            minLength: 2
                            maxLength: 2
                        required:
                          - organization
                          - city
                          - country
                      - type: object
                        properties:
                          nodeDomain:
                            type: string
                            example: block.gov
                            minLength: 4
                            maxLength: 254
                            description: >-
                              The domain the network will use. It must be
                              compliant with RFCs 1034 and 1035.TODO: generalize
                              this description.
                          platformVersion:
                            type: integer
                            readOnly: true
                          sandboxConfiguration:
                            type: object
                            required:
                              - network
                              - mainUrl
                              - available
                            properties:
                              id:
                                type: integer
                                format: int64
                                readOnly: true
                              network:
                                type: integer
                                format: int64
                              mainUrl:
                                type: string
                                format: url
                              available:
                                type: boolean
                        required:
                          - nodeDomain
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks/{network-id}/legal-name:
    put:
      tags:
        - Network
      operationId: putNetworkLegalName
      summary: High impact change
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: >
                We are using only the organization, city and country fields of a
                X500 legal name.


                For details, see:

                 - [X500 Legal Name Restrictions](https://corda.network/corda-network-rulebook/allowable-identity-names-on-corda-network/)

                 - [A String Representation of Distinguished Names](https://datatracker.ietf.org/doc/html/rfc1485)
              properties:
                organization:
                  type: string
                  pattern: ^[A-Z][A-Za-z0-9]*(\s[A-Za-z0-9]+)*$
                  minLength: 2
                  maxLength: 110
                city:
                  type: string
                  pattern: ^[A-Z][A-Za-z]*(\s[A-Za-z]+)*$
                  minLength: 2
                  maxLength: 64
                country:
                  type: string
                  pattern: ^[A-Z][A-Z]$
                  minLength: 2
                  maxLength: 2
              required:
                - organization
                - city
                - country
      responses:
        '204':
          description: Successfull Request
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks/{network-id}/status:
    get:
      tags:
        - Network Status
      operationId: getNetworkStatus
      summary: Gets the status of a network.
      description: It will retrieve the last X entries for the log.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successfull Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  creation:
                    type: object
                    properties:
                      stageDetail:
                        type: object
                        properties:
                          currentStage:
                            type: string
                            enum:
                              - NETWORK.DOMAIN
                              - NETWORK.NAMESPACE
                              - NETWORK.CENM.AUTH
                              - NETWORK.CENM.ZONE
                              - NETWORK.CENM.IDMAN
                              - NETWORK.CENM.GATEWAY
                              - NETWORK.CENM.SIGNER
                              - NETWORK.CENM.NETMAP
                              - NETWORK.CORDA.NOTARY
                              - NETWORK.CORDA.NODE
                              - DONE
                          orderedStages:
                            type: array
                            items:
                              type: object
                              properties:
                                index:
                                  type: integer
                                value:
                                  type: string
                                  enum:
                                    - NETWORK.DOMAIN
                                    - NETWORK.NAMESPACE
                                    - NETWORK.CENM.AUTH
                                    - NETWORK.CENM.ZONE
                                    - NETWORK.CENM.IDMAN
                                    - NETWORK.CENM.GATEWAY
                                    - NETWORK.CENM.SIGNER
                                    - NETWORK.CENM.NETMAP
                                    - NETWORK.CORDA.NOTARY
                                    - NETWORK.CORDA.NODE
                                    - DONE
                          completedStages:
                            type: array
                            items:
                              type: string
                              enum:
                                - NETWORK.DOMAIN
                                - NETWORK.NAMESPACE
                                - NETWORK.CENM.AUTH
                                - NETWORK.CENM.ZONE
                                - NETWORK.CENM.IDMAN
                                - NETWORK.CENM.GATEWAY
                                - NETWORK.CENM.SIGNER
                                - NETWORK.CENM.NETMAP
                                - NETWORK.CORDA.NOTARY
                                - NETWORK.CORDA.NODE
                                - DONE
                          log:
                            type: array
                            items:
                              type: object
                              properties:
                                stage:
                                  type: string
                                  enum:
                                    - NETWORK.DOMAIN
                                    - NETWORK.NAMESPACE
                                    - NETWORK.CENM.AUTH
                                    - NETWORK.CENM.ZONE
                                    - NETWORK.CENM.IDMAN
                                    - NETWORK.CENM.GATEWAY
                                    - NETWORK.CENM.SIGNER
                                    - NETWORK.CENM.NETMAP
                                    - NETWORK.CORDA.NOTARY
                                    - NETWORK.CORDA.NODE
                                    - DONE
                                start:
                                  type: string
                                  format: date
                                finish:
                                  type: string
                                  format: date
                                result:
                                  type: string
                                  enum:
                                    - COMPLETED
                                    - WORKING
                                    - ERROR
                  currentStatus:
                    type: string
                    enum:
                      - STARTING
                      - RUNNING
                      - CREATING
                      - STOPPING
                      - STOPPED
                      - PENDING_UPDATE
                      - DELETING
                      - ERROR
                      - PURGING
                      - RESTARTING
                    readOnly: true
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks/{network-id}/status/creation:
    get:
      tags:
        - Network Status
      operationId: getNetworkStatusCreation
      summary: Get only the creation status of a network.
      description: It will retrieve the last X entries for the log.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successfull Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  stageDetail:
                    type: object
                    properties:
                      currentStage:
                        type: string
                        enum:
                          - NETWORK.DOMAIN
                          - NETWORK.NAMESPACE
                          - NETWORK.CENM.AUTH
                          - NETWORK.CENM.ZONE
                          - NETWORK.CENM.IDMAN
                          - NETWORK.CENM.GATEWAY
                          - NETWORK.CENM.SIGNER
                          - NETWORK.CENM.NETMAP
                          - NETWORK.CORDA.NOTARY
                          - NETWORK.CORDA.NODE
                          - DONE
                      orderedStages:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: integer
                            value:
                              type: string
                              enum:
                                - NETWORK.DOMAIN
                                - NETWORK.NAMESPACE
                                - NETWORK.CENM.AUTH
                                - NETWORK.CENM.ZONE
                                - NETWORK.CENM.IDMAN
                                - NETWORK.CENM.GATEWAY
                                - NETWORK.CENM.SIGNER
                                - NETWORK.CENM.NETMAP
                                - NETWORK.CORDA.NOTARY
                                - NETWORK.CORDA.NODE
                                - DONE
                      completedStages:
                        type: array
                        items:
                          type: string
                          enum:
                            - NETWORK.DOMAIN
                            - NETWORK.NAMESPACE
                            - NETWORK.CENM.AUTH
                            - NETWORK.CENM.ZONE
                            - NETWORK.CENM.IDMAN
                            - NETWORK.CENM.GATEWAY
                            - NETWORK.CENM.SIGNER
                            - NETWORK.CENM.NETMAP
                            - NETWORK.CORDA.NOTARY
                            - NETWORK.CORDA.NODE
                            - DONE
                      log:
                        type: array
                        items:
                          type: object
                          properties:
                            stage:
                              type: string
                              enum:
                                - NETWORK.DOMAIN
                                - NETWORK.NAMESPACE
                                - NETWORK.CENM.AUTH
                                - NETWORK.CENM.ZONE
                                - NETWORK.CENM.IDMAN
                                - NETWORK.CENM.GATEWAY
                                - NETWORK.CENM.SIGNER
                                - NETWORK.CENM.NETMAP
                                - NETWORK.CORDA.NOTARY
                                - NETWORK.CORDA.NODE
                                - DONE
                            start:
                              type: string
                              format: date
                            finish:
                              type: string
                              format: date
                            result:
                              type: string
                              enum:
                                - COMPLETED
                                - WORKING
                                - ERROR
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks/{network-id}/status/creation/log:
    get:
      tags:
        - Network Status
      operationId: getNetworkStatusCreationLog
      summary: Get the detailed logs of the network creation
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: from
          schema:
            type: string
            description: >-
              A date in ISO 8601 format from where the query will starts.
              Defaults to current date.
          required: false
        - in: query
          name: to
          schema:
            type: string
            description: >-
              A date in ISO 8601 format to where the query will end. Defaults to
              current date.
          required: false
        - in: query
          name: page
          schema:
            type: integer
            description: Current page. Defaults to 0.
            default: 0
          required: false
        - in: query
          name: pageSize
          schema:
            type: integer
            description: Max entries for each page. Defaults to 10.
            default: 10
          required: false
      responses:
        '200':
          description: Successfull Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        stage:
                          type: string
                          enum:
                            - NETWORK.DOMAIN
                            - NETWORK.NAMESPACE
                            - NETWORK.CENM.AUTH
                            - NETWORK.CENM.ZONE
                            - NETWORK.CENM.IDMAN
                            - NETWORK.CENM.GATEWAY
                            - NETWORK.CENM.SIGNER
                            - NETWORK.CENM.NETMAP
                            - NETWORK.CORDA.NOTARY
                            - NETWORK.CORDA.NODE
                            - DONE
                        start:
                          type: string
                          format: date
                        finish:
                          type: string
                          format: date
                        result:
                          type: string
                          enum:
                            - COMPLETED
                            - WORKING
                            - ERROR
                  metadata:
                    type: object
                    properties:
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
  /networks/{network-id}/activity:
    get:
      tags:
        - Network
      operationId: getNetworkActivity
      summary: Returns the activity log of a network
      description: Returns
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: network-id
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: event
          schema:
            type: string
          required: false
        - in: query
          name: from
          schema:
            type: string
            description: >-
              A date in ISO 8601 format from where the query will starts.
              Defaults to current date.
          required: false
        - in: query
          name: to
          schema:
            type: string
            description: >-
              A date in ISO 8601 format to where the query will end. Defaults to
              current date.
          required: false
        - in: query
          name: page
          schema:
            type: integer
            description: Current page. Defaults to 0.
            default: 0
          required: false
        - in: query
          name: pageSize
          schema:
            type: integer
            description: Max entries for each page. Defaults to 10.
            default: 10
          required: false
      responses:
        '200':
          description: Successfull Request TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        event:
                          type: string
                          enum:
                            - login
                            - TODO
                        logTime:
                          type: string
                          format: date
                        description:
                          type: string
                  metadata:
                    type: object
                    properties:
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
        '401':
          description: User is not authenticated.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '403':
          description: User is authenticated but not allowed.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '404':
          description: Resource does not exists.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
        '500':
          description: >-
            The message code is an encoded string that must be sent to the
            support team as a ticket.
          content:
            application/json:
              schema:
                type: array
                description: List of errors found during validation.
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error status summary for the executed command.
                      example: Organization Legal Name is too big.
                    code:
                      type: string
                      example: network.organizationLegalName.invalid
                      description: |
                        # `network.{field}.invalid`
                        field is non compliant
                        # `auth.invalid`
                        Invalid credentials sent to the server.
                        # `auth.verifyEmail`
                        User did not verified their email.
                        # `auth.mustChangePassword`
                        User must change password.        
                        # `user.emailAlreadyUsed`
                        Email already exists.
                        # `auth.forbidden`
                        Forbidden access
                        # `internal.unexpected`
                        Unexpected error from server
                      enum:
                        - auth.invalid
                        - auth.verifyEmail
                        - auth.unauthorized
                        - auth.forbidden
                        - auth.expired
                        - auth.blocked
                        - auth.mustChangePassword
                        - auth.invalidPhoneVerificationCode
                        - user.notFound
                        - user.created
                        - user.notCreated
                        - user.emailAlreadyExists
                        - userHasRoleInClient
                        - notaryNotFound
                        - notaryPublishDateTooEarly
                        - notaryOrganizationNameConflict
                        - notaryIsCreating
                        - network.notFound
                        - network.alias.invalid
                        - network.name.invalid
                        - network.domain.invalid
                        - network.organizationLegalName.invalid
                        - network.city.invalid
                        - network.country.invalid
                        - network.nodeDomain.invalid
                        - network.tenant.invalid
                        - node.notFound
                        - nodeOrganizationNameConflict
                        - cordappVersionShouldBeDisabled
                        - cordappShouldNotHaveVersions
                        - shouldWaitPendingFlagday
                        - internal.unexpected
                        - field.required
                        - field.invalid
                        - field.size
                        - field.pattern
                        - illegalStatus
                        - badRequest
                        - timeConstraint
                        - reachedMaxNetworks
                        - reachedSubscriptionLimit
                        - userReachedSubscriptionLimit
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
